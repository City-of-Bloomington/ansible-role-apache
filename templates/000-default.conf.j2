ServerName {{ ansible_host }}
ServerAdmin {{ apache_serveradmin }}

DocumentRoot /srv/sites/master
<Directory  "/srv/sites/master">
    Options FollowSymLinks
    AllowOverride None
    Require all granted
</Directory>

{% if apache_proxy is defined and apache_proxy %}
<IfModule mod_remoteip.c>
RemoteIPHeader X-Forwarded-For
RemoteIPInternalProxy {{ apache_proxy | join(' ') }}
LogFormat "%a %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" combined
</IfModule>
{% endif %}

ErrorLog ${APACHE_LOG_DIR}/error.log
CustomLog ${APACHE_LOG_DIR}/access.log combined

<IfModule mod_status.c>
    <VirtualHost localhost:80>
        DocumentRoot /var/www/html
    </VirtualHost>
</IfModule>

<IfModule mod_ssl.c>
    <VirtualHost *:80>
        Redirect / https://{{ ansible_host }}/
    </VirtualHost>

    <VirtualHost _default_:443>
        SSLEngine On

        SSLCertificateFile  /etc/ssl/private/{{ apache_ssl.cert.file }}
        SSLCertificateKeyFile /etc/ssl/private/{{ apache_ssl.key.file }}
        {% if apache_ssl.chain is defined %}SSLCertificateChainFile /etc/ssl/private/{{ apache_ssl.chain.file }}{% endif %}

        <FilesMatch "\.(cgi|shtml|phtml|php)$">
            SSLOptions +StdEnvVars
        </FilesMatch>
        <Directory /usr/lib/cgi-bin>
            SSLOptions +StdEnvVars
        </Directory>

        SetEnvIf Origin ^(https?://.+\.bloomington\.in\.gov(?::\d{1,5})?)$   CORS_ALLOW_ORIGIN=$1
        Header append Access-Control-Allow-Origin  %{CORS_ALLOW_ORIGIN}e   env=CORS_ALLOW_ORIGIN
        Header merge  Vary "Origin"

        IncludeOptional sites-enabled/conf.d/*.conf
    </VirtualHost>
</IfModule>
