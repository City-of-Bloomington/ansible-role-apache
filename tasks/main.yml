---
- name: "Install apache and related packages"
  apt:
    name: "{{ packages }}"
    state: "present"
  vars:
    packages:
      - "apache2"
      - "lynx"

- name: "Add mod_rewrite configuration"
  copy:
    src: "rewrite.conf"
    dest: "/etc/apache2/mods-available/rewrite.conf"
    force: "no"
  notify: "apache_restart"

- name: 'Disable other vhosts logging'
  file:
    path: '/etc/apache2/conf-enabled/other-vhost-access-log.conf'
    state: 'absent'

- name: "Create master site directory"
  file:
    path:  "/srv/sites/master"
    state: "directory"
    owner: "www-data"
    group: "staff"
    mode:  "2775"

- name: "Create site configuration directory"
  file:
    path: "/etc/apache2/sites-enabled/conf.d"
    state: "directory"

- name: "Enable apache modules"
  apache2_module:
    name: "{{ item }}"
    state: "present"
  with_items:
    - "alias"
    - "headers"
    - "remoteip"
    - "reqtimeout"
    - "rewrite"
    - "ssl"
    - "proxy"
    - "proxy_html"
    - "proxy_http"
  notify: "apache_restart"

- name: "Generate self-signed certificate"
  command: openssl req -new -nodes -x509 -subj "{{ apache_ssl.cert.subj }}" -days 3650 -keyout /etc/ssl/private/{{ apache_ssl.key.file }} -out /etc/ssl/private/{{ apache_ssl.cert.file }}
  when: "(apache_ssl.cert.subj is defined) and apache_ssl.cert.subj"
  no_log: true

- name: "Install ssl key"
  copy:
    content: "{{ apache_ssl.key.data }}"
    dest: "/etc/ssl/private/{{ apache_ssl.key.file }}"
    mode: "0640"
  when: "(apache_ssl.key.data is defined) and apache_ssl.key.data"
  no_log: true
  notify: "apache_restart"

- name: "Install ssl cert"
  copy:
    content: "{{ apache_ssl.cert.data }}"
    dest: "/etc/ssl/private/{{ apache_ssl.cert.file }}"
    mode: "0640"
  when: "(apache_ssl.cert.data is defined) and apache_ssl.cert.data"
  no_log: true
  notify: "apache_restart"

- name: "Install ssl certificate chain"
  copy:
    content: "{{ apache_ssl.chain.data }}"
    dest: "/etc/ssl/private/{{ apache_ssl.chain.file }}"
    mode: "0640"
  when: "(apache_ssl.chain.data is defined) and apache_ssl.chain.data"
  no_log: true
  notify: "apache_restart"

# note that ansible 'copy' copies from the control machine to the host:
# - copy: src=/var/www/html/index.html dest=/srv/sites/master/index.html force=no
- name: "Copy over default index.html"
  shell: "cp /var/www/html/index.html /srv/sites/master/index.html"
  args:
    creates: "/srv/sites/master/index.html"

- name: "Update default configuration"
  template:
    src: "{{ lookup('first_found', paths ) }}"
    dest: "/etc/apache2/sites-available/000-default.conf"
    owner: "root"
    group: "root"
    mode: "0644"
  vars:
    paths:
      - "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}/templates/000-default.conf"
      - "{{ inventory_dir }}/group_vars/apache/templates/000-default.conf"
      - "{{ role_path }}/templates/000-default.conf"
  notify: "apache_restart"
  tags:
    - "apache_conf"

- name: "Update websites configuration"
  template:
    src: "{{ item }}"
    dest: "/etc/apache2/sites-enabled/conf.d/"
    mode: "0644"
  with_fileglob:
    - "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}/templates/apache_sites/*.conf"
  notify: "apache_restart"
  tags:
    - "apache_conf"

- name: "Remove server signature"
  lineinfile:
    dest:   "/etc/apache2/conf-available/security.conf"
    regexp: "{{ item.regexp }}"
    line:   "{{ item.line   }}"
  with_items:
    - { regexp: "^ServerTokens",    line: "ServerTokens Prod"   }
    - { regexp: "^ServerSignature", line: "ServerSignature Off" }
  notify: "apache_restart"
  tags:
    - "apache_conf"

- name: "Disable outdated security protocols"
  lineinfile:
    dest:   "/etc/apache2/mods-enabled/ssl.conf"
    regexp: "^.+SSLProtocol.+$"
    line:   "SSLProtocol all -SSLv3 -TLSv1 -TLSv1.1"
  notify: "apache_restart"
  tags:
    - "apache_conf"

- name: "Configure the firewall (http)"
  ufw:
    rule: "allow"
    port: "{{ item }}"
  with_items:
    - "http"
    - "https"
...
